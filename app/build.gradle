apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.zzhou.entrance.guard"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 100302
        versionName "1.3.2"

        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
        ndk {
            // 设置支持的SO库架构
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            //abiFilters 'armeabi' , 'armeabi-v7a'//, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    android.applicationVariants.all { variant ->
        renameAPK(variant, defaultConfig)
    }
}
def renameAPK(variant, defaultConfig) {
    variant.outputs.all {
        def applicationName = 'Entrance_Guard'
//        def formattedDate = new Date().format('yyyyMMdd')
        def fileName = applicationName + "_v" + defaultConfig.versionName + "_" + "${variant.buildType.name}" + ".apk"
//        + "_" + formattedDate + "_" + "${variant.buildType.name}" + ".apk"
        outputFileName = fileName
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:multidex:1.0.1'
    //    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.zhouyou:rxeasyhttp:2.0.5'
    implementation 'com.github.bumptech.glide:glide:4.0.0-RC0'
    //    implementation 'cn.jzvd:jiaozivideoplayer:6.3.1'
    //    implementation 'com.danikula:videocache:2.7.0'
    implementation 'id.zelory:compressor:2.1.0'
    implementation 'com.wang.avi:library:2.1.3'
    //https://github.com/81813780/AVLoadingIndicatorView
    compile files('libs/netty-all-4.1.29.Final.jar')
    compile files('libs/netty-all-4.1.29.Final-sources.jar')
    compile 'com.google.code.gson:gson:2.8.2'
    //    compile 'com.github.0xZhangKe:ZLog:3.0'//Zlog
    implementation files('libs/log4j-1.2.17.jar')
    implementation files('libs/mixSip.jar')
    //testin云测
    //添加 Bugout SDK基础库依赖,其中latest.integration指最新基础库版本号，也可以指定明确的版本号，例如5.0.7
    compile 'cn.testin.analysis:testin-data:latest.integration'
    //添加 Bugout SDK依赖,其中latest.integration指最新Bugout SDK版本号，也可以指定明确的版本号，例如1.0.5
    compile 'cn.testin.analysis:bugout:latest.integration'
    //添加 Bugout NDK依赖,其中latest.integration指最新Bugout NDK SDK版本号，也可以指定明确的版本号，例如1.0.0-beta
    //    compile 'cn.testin.analysis:bugout-ndk:latest.integration'
    implementation 'com.android.support:support-v4:28+'
    implementation project(':ZLogLib')
    //二维码
    compile 'com.google.zxing:core:3.3.0'
}
